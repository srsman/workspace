library(RODBC)
library(WindR)
library(WindR)
trading_days<-as.Date(read.csv(file="Z:/team4share/JY/HoldM/2014trade_day.csv",stringsAsFactors=F)[,1])
trading_days
trading_days<-as.Date(read.csv(file="Z:/team4share/实盘策略/仓位管理/2015年交易日.csv",stringsAsFactors=F)[,1]) #2015?杲?????, 每????????
trading_days
Q
Q
Q
rm(list=ls(all=TRUE));
setwd("Z:\\team4share\\实盘策略\\实盘记录\\alpha27\\2015-9-08")
rm(list=ls(all=TRUE));
setwd("Z:\\team4share\\实盘策略\\实盘记录\\alpha27\\2015-9-08")
getwd()
rm(list=ls(all=TRUE));
setwd("Z:\\team4share\\实盘策略\\实盘记录\\alpha27\\2015-9-08")
getwd()
getwd()
library(WindR)
library(RODBC)
route1<-"[JYDB].[dbo]."
ch<-odbcConnect('JYDB',uid='jydb',pwd='jydb')
ch2<-odbcConnect('winddata',uid='root',pwd='123')
get_momentum<-function(datetime,trade_day_chr,trade_codes){
n<-length(trade_codes)
p<-which(trade_day_chr==datetime)
datetime1<-trade_day_chr[p-520]
datetime2<-datetime
aaa<-data.frame("TradingDay"=rep(as.character(datetime),n),"secucode"=rep(0,n),"momentum"=rep(0,n))
for(j in 1:n){
temp<-trade_codes[j]
sql_temp<-paste("select b.SecuCode,a.TradingDay,a.OpenPrice,a.ClosePrice from ",route1,"QT_DailyQuote a, ",route1,"SecuMain b where a.InnerCode = b.InnerCode  and b.SecuCategory=1 and a.TradingDay>=\'",datetime1,"\' and a.TradingDay<=\'",datetime2,"\' and b.SecuCode ='",temp,"' order by a.TradingDay desc",sep="")
data<-sqlQuery(ch,sql_temp)
if(nrow(data)>0){
data[which(data[,c(3,4)]==0),c(3,4)]<-NA
#   data<-data[complete.cases(data),]
ret<-data[1:(nrow(data)-20),4]/data[21:nrow(data),3]-1
T<-length(ret)
weight_seq<-c(1:T)
weight_seq[which(is.na(ret))]<-0
ret[which(is.na(ret))]<-0
w<-0.5^(weight_seq/120)/sum(0.5^(weight_seq/120))
aaa[j,2:3]<-c(temp,sum(w*log(1+ret)))
}else{aaa[j,2:3]<-c(temp,NA)}}
aaa[which(aaa[,3]>1000),3]<-NA
aaa<-aaa[complete.cases(aaa),]
aaa[,3]<-as.numeric(aaa[,3])
aaa[,3]<-round(aaa[,3],4)
#   aaa[,3]<-rep(as.character(datetime),nrow(aaa))
#   colnames(aaa[,3])<-"TradingDay"
return(aaa)
}
add_zero_for_secucode<-function(data){
m<-c('0','00','000','0000','00000')
temp<-c()
for(i in 1:length(data)){
code<-data[i]
code<-as.character(code)
p<-6-length(strsplit(code,'')[[1]])
code<-paste(m[p],code,sep='')
temp[i]<-code
}
return(temp)
}
sql_tradeday<-paste("select distinct TradingDay from ",route1,"QT_DailyQuote where TradingDay > '2003-01-02' ORDER BY TradingDay")
trade_day<-sqlQuery(ch,sql_tradeday)[,1]
#trade_day<-as.Date(trade_day)
trade_day_chr<-as.character(trade_day)
end<-which(trade_day_chr=='2015-07-17')
chg_num<-seq(1816,end,1) # chg_num<-seq(619,3088,20) the best period #设置起止日期（如数据更新，需更改区间）
chg_date<-trade_day_chr[chg_num] #换仓日赋值
trade_day_chr<<-trade_day_chr
momen<-list()
for(i in 2701:2850){
datetime1<-trade_day_chr[i-21]
datetime2<-trade_day_chr[i]
sql_temp<-paste("select distinct b.SecuCode from ",route1,"QT_DailyQuote a, ",route1,"SecuMain b where a.InnerCode = b.InnerCode  and b.SecuCategory=1 and a.TradingDay=\'",datetime1,"\' and a.OpenPrice>0 order by b.SecuCode",sep="")
temp<-sqlQuery(ch,sql_temp)
temp[,1]<-add_zero_for_secucode(temp[,1])
sql_temp<-paste("select distinct b.SecuCode from ",route1,"QT_DailyQuote a, ",route1,"SecuMain b where a.InnerCode = b.InnerCode  and b.SecuCategory=1 and a.TradingDay=\'",datetime2,"\' and a.OpenPrice>0 order by b.SecuCode",sep="")
temp1<-sqlQuery(ch,sql_temp)
temp1[,1]<-add_zero_for_secucode(temp1[,1])
tempcombine<-c()
k<-1
for(j in 1:nrow(temp)){
if(temp[j,1]%in%temp1[,1]){
tempcombine[k]<-as.character(temp[j,])
k<-k+1
}
}
trade_codes<-add_zero_for_secucode(tempcombine)
momen[[i-2700]]<-get_momentum(datetime2,trade_day_chr,trade_codes)
print(i)
}
Sys.time()
save(momen,file = "Z:/team4share/策略开发/multi_factor-style_neutral/all A/momentum2701-2850.Rdata")
setwd('Z:/team4share/策略开发/multi_factor-style_neutral/all A')
source('function_getdata.R')
source('function_backtest_targetfunction.R',encoding="utf-8")
source('function_stockpick.R')
library(WindR)
library(RODBC)
#library(lpSolve)
library(nlme)################################修改
library(quadprog)
library(mice)
library(graphics)
route1<-"[JYDB].[dbo]."
# industryname1<-'银行'
# industryname2<-'证券'
# industryname3<-'保险'
ch<-odbcConnect('JYDB',uid='jydb',pwd='jydb')
ch2<-odbcConnect('winddata',uid='root',pwd='123')
DataPeriod<-1
load("fctdata_new.RData")
#load("F:/desktop/fct1/fctdata.RData")
chg_date<-chg_date_f("2015-07-17")#和得到因子的chg_num要相同
start_num<-6
stock_pick<-list()
for(x in start_num:length(chg_date)){
sql_temp<-paste("select distinct b.SecuCode from ",route1,"QT_DailyQuote a, ",route1,"SecuMain b where TradingDay='",chg_date[x],"' and a.InnerCode = b.InnerCode and a.OpenPrice>0 and b.SecuCategory='1' order by b.SecuCode",sep="")
curr_allA_secucode<-sqlQuery(ch,sql_temp)
curr_allA_secucode<-add_zero_for_secucode1(curr_allA_secucode)
price_vector<-c()
for(m in 1:length(curr_allA_secucode)){
sql_temp<-paste("select a.OpenPrice from ",route1,"QT_DailyQuote a, ",route1,"SecuMain b where b.SecuCode='",curr_allA_secucode[m],"' and TradingDay='",chg_date[x],"' and a.InnerCode = b.InnerCode and a.OpenPrice>0 and b.SecuCategory='1'",sep="")
price_vector[m]<-sqlQuery(ch,sql_temp)
}
price_temp<-rep(0,length(price_vector))
for(m in 1:length(price_vector)){price_temp[m]<-price_vector[[m]]}
#    secuweight_vector<-c()
#      for(m in 1:nrow(curr_allA_secucode)){
#
#          sql_temp<-paste("select b.SecuCode,a.Weight,a.UpdateTime from ",route1,"LC_IndexComponentsWeight a, ",route1,"SecuMain b where b.SecuCode='",curr_allA_secucode[m,],"' and a.InnerCode=b.InnerCode and UpdateTime<='",chg_date[x],"' and UpdateTime>='",as.character(as.Date(chg_date[x])-365),"' order by UpdateTime desc",sep="")
#          #secuweight_vector[m]<-sqlQuery(ch,sql_temp)[,2]
#          }
secutemp<-data.frame('secucode'=curr_allA_secucode,'openprice'=price_temp,'Weight'=rep(1/length(curr_allA_secucode),length(curr_allA_secucode)))
secutemp<-secutemp[complete.cases(secutemp),]
data_weight<-secutemp[,c(1,3)]
data_weight[,2]<-data_weight[,2]/sum(data_weight[,2])
curr_allA_secucode<-as.vector(secutemp[,1])
curr_secucode_num<-length(curr_allA_secucode)
factor_return<-data.frame('intercept'=NA,'f1'=NA,'f2'=NA,'f3'=NA,'f4'=NA,'f5'=NA,'f6'=NA,'f7'=NA,'f8'=NA,'f9'=NA)
particular_ret<-matrix(rep(0,curr_secucode_num*(x-1)),x-1,curr_secucode_num)
curr_fctdata_list<-list()
# curr_ret<-list()
#     data_weight<-data.frame('secucode'=NA,'Weight'=NA)
#      sql_temp<-paste("select b.SecuCode,a.Weight,a.UpdateTime from ",route1,"LC_IndexComponentsWeight a, ",route1,"SecuMain b where a.InnerCode=b.InnerCode and a.IndexCode='3145' and UpdateTime<='",chg_date[x],"' and UpdateTime>='",as.character(as.Date(chg_date[x])-365),"' order by UpdateTime desc",sep="")
#      data<-sqlQuery(ch,sql_temp)
#      uniquedata<-unique(data[,1])
#      for(i in 1:curr_secucode_num){
#            data_weight[i,]<-data[which(data[,1]==uniquedata[i])[1],1:2]}
#     data_weight[,1]<-add_zero_for_secucode(data_weight[,1])
for(j in 4:(x-1)){#循环，把所有交易日都回归一遍，因子收益率存储，以便计算方差
curr_fctdata<-data.frame('secucode'=curr_allA_secucode,'ret'=rep(NA,curr_secucode_num),'beta'=rep(NA,curr_secucode_num),'momentum'=rep(NA,curr_secucode_num),'size'=rep(NA,curr_secucode_num),'volatility'=rep(NA,curr_secucode_num),'growth'=rep(NA,curr_secucode_num),'value'=rep(NA,curr_secucode_num),'leverage'=rep(NA,curr_secucode_num),'liquidity'=rep(NA,curr_secucode_num),'ep'=rep(NA,curr_secucode_num))
for(i in 1:curr_secucode_num){
curr_fctdata[i,]<-fctdata[[j]][which(fctdata[[j]][,1]==curr_allA_secucode[i]),]}
#curr_fctdata[,'ret']<-get_ret_new(chg_date[j],chg_date[j+1],uniquedata[1:300])['ret']
# temp1<-fctdata[[j]]#列表，63(换仓日数目)个数据框，每个300行，列secucode ret beta momentum size volatility growth value leverage liquidity ep
#   f_result<-factor_ret(temp1)##广义最小二乘法得到参数（因子收益率）
#  factor_return[j,]<-f_result[[1]]##回归方程参数传入
#  curr_ret[[j]]<-curr_fctdata[,'ret']
#  imp<-mice(curr_fctdata)
#   data11<-complete(imp, action=3)
for(jj in 2:11){
curr_fctdata[is.na(curr_fctdata[,jj]),jj]<-mean(curr_fctdata[!is.na(curr_fctdata[,jj]),jj])
}
data11<-curr_fctdata
curr_fctdata_list[[j]]<-data11
result11<-list()
fm<-gls(ret~beta+momentum+size+ep+volatility+growth+value+leverage+liquidity,data=data11)##需要nlme包
weights1<-as.vector(1/sqrt(exp(fitted(fm))))
fm1<-gls(ret~beta+momentum+size+ep+volatility+growth+value+leverage+liquidity,data=data11,weights=varFixed(~weights1))
result11[[1]]<-fm1$coefficients##拟合参数
ret_fit<-fm1$fitted##拟合值
particular_ret[j,]<-as.vector(fm1$residuals)
#  ret<-temp1[,'ret']
#  s1<-sum((ret-ret_fit)^2)
# s2<-sum((ret-mean(ret))^2)
#  r_square<-1-s1/s2
r_square<-NA
result11[[2]]<-r_square
factor_return[j,]<-result11[[1]]##factor_return 因子收益率
}
#factor_return<-factor_return_f(chg_date,fctdata)
for(l in 3:11){
curr_fctdata_list[[length(curr_fctdata_list)]][,l]<-scale(curr_fctdata_list[[length(curr_fctdata_list)]][,l])
}
stock_pick[[x]]<-stock_pick_f(factor_return[4:nrow(factor_return),],particular_ret[4:nrow(particular_ret),],chg_date,x,curr_fctdata_list[[length(curr_fctdata_list)]],data_weight,curr_secucode_num)
#stock_pick[[x]]<-stock_pick_f(factor_return[4:nrow(factor_return),],particular_ret[4:nrow(particular_ret),],chg_date,x,curr_fctdata_list[[length(curr_fctdata_list)]],data_weight)
}
write.csv(stock_pick,file="stock_pick_result.csv",row.names=F)
save(stock_pick,file="stockpick.Rdata")
#####################################################月份效应：回测运行################################
####Note： 1.everyday 与 tradeday里 mylist=DrawData(starttime=as.Date("2004-12-01"),lengthn=127,industry)
#2. stock_pick=PortfolioConstruct(mylist,select_industry,start_time="2005-01-01",period=126,yuzhi=6,bili=0.5,pick="hs300weight")
#130 与129 每月加一。勿忘
rm(list=ls(all=TRUE))
#setwd("G:\\R program&data\\final") # in Author's computer
setwd("Z:\\team4share\\实盘策略\\月份效应")  # in team's computer
source("Part1_DrawData.R",encoding="utf-8")
source("Part2_PortfolioConstruct.R",encoding="utf-8")
source("Part3_Backtesthedge4.R",encoding="utf-8")
source("Part4_PlotCal2.R",encoding="utf-8")
source("Part5_IntoWind.R",encoding="utf-8")
source('dyna-hedge.R')
library(RODBC)
ch=odbcConnect('winddata',uid='root',pwd='123')
#drawdata
industry=read.csv("allAindustry.csv")
mylist=DrawData(starttime=as.Date("2004-12-01"),lengthn=130,industry)
save(mylist,file="mylist.RData")
#next month,the period=period+1
#portfolio construct
select_industry=read.table(file="output12.csv",header=T,sep=",") ##过些年份后，可能还要更新频数的统计表格；
stock_pick=PortfolioConstruct(mylist,select_industry,start_time="2005-01-01",period=129,yuzhi=6,bili=0.5,pick="hs300weight")
#next month,the period=period+1
#for position management
lastday=as.character(Sys.Date())
caplist_hs300_month_amt_0930=Backtesthedge4(30000000,0.85,0.9,stock_pick,0.00035,0.00003,0.001,0.002,0.00017,lastday,0.05,"hs300if0930")
caplist_hs300_month_amt_0915=Backtesthedge4(30000000,0.85,0.9,stock_pick,0.00035,0.00003,0.001,0.002,0.00017,lastday,0.05,"hs300if0915")
caplist1=caplist_hs300_month_amt_0930[[1]]
output_300<-dyna_hedge(caplist1,stock_pick,1,0.003,lastday,"hs300if0930")
write.csv(output_300,file=paste("Z:\\team4share\\实盘策略\\回测\\test\\MonthlyEffect300_dyna_hed_0930","-",Sys.Date(),".csv",sep=""),row.names=F)
write.csv(output_300,file=paste("Z:\\team4share\\实盘策略\\仓位管理\\MonthlyEffect300_dyna_hed_0930.csv",sep=""),row.names=F)
caplist2=caplist_hs300_month_amt_0915[[1]]
name1="MonthlyEffect300_0930.csv"
name2="MonthlyEffect300_0915.csv"
setwd("Z:\\team4share\\实盘策略\\仓位管理")
write.csv(caplist1,file=name1,row.names=F)
write.csv(caplist2,file=name2,row.names=F)
##file backup
name1=paste("caplist_month_effect","_","hs300if0930","-",lastday,sep="")
name3=paste(name1,".csv",sep="")
#setwd("G:\\R program&data\\final\\backtest")
setwd("Z:\\team4share\\实盘策略\\月份效应\\backtest")
future=paste(name1,".jpg")
jpeg(file=future)
PlotCal2(caplist1[,2]/caplist1[1,2],caplist1[,1],t=name1)
dev.off()
write.csv(caplist1,file=name3,row.names=F)
name1=paste("caplist_month_effect","_","hs300if0915","-",lastday,sep="")
name3=paste(name1,".csv",sep="")
#setwd("G:\\R program&data\\final\\backtest")
setwd("Z:\\team4share\\实盘策略\\月份效应\\backtest")
future=paste(name1,".jpg")
jpeg(file=future)
PlotCal2(caplist2[,2]/caplist2[1,2],caplist2[,1],t=name1)
dev.off()
write.csv(caplist2,file=name3,row.names=F)
odbcClose(ch)
